```{r Data Cleaning}

library(tidyverse)
library(ggplot2)
library(vegan)
library(cowplot)
library(viridis)

SingScore <- function(x){
  scores <- numeric(0)
  for(j in 4:9){
    a = 0
    s = 0
    singscore = 0
    for (i in 1:74){
      if(x[i,j]>0){
        a = a + x[i,3]
        s = s + 1
      }
    }
    singscore = (a/s) * 20
    scores <- c(scores,singscore)
  }
  df <- data.frame(SingScore = scores)
  df[df == "" | is.na(df)] <- 0
  return(df)
}

process_site <- function(site_template, spp_data, spp_cols, total_col) {
  site <- site_template
  site[1:86, 4:10] <- cbind(spp_data[3:88, spp_cols], spp_data[3:88, total_col])
  site[1:85, 4:10][site[1:85, 4:10] == "" | is.na(site[1:85, 4:10])] <- 0
  site <- site %>% mutate_at(c(4:10), as.numeric)
  site$Surber_Total <- rowSums(site[4:9])
  site <- site %>% relocate(Surber_Total, .before = Tray.Net)
  return(site)
}

WNPtemplate <- read.csv("WNP Sample Template.csv")
WNPsppOverall <- read.csv("WNP Species Sample.csv")

BBNPtemplate <- read.csv("BBNP Sample Template.csv")
BBNPsppOverall <- read.csv("BBNP Species Sample.csv")

WNPGrp6 <- process_site(WNPtemplate, WNPsppOverall,2:7,30)
WNPGrp4 <- process_site(WNPtemplate, WNPsppOverall,8:13,31)
WNPGrp2 <- process_site(WNPtemplate, WNPsppOverall,14:19,32)
WNPGrp1 <- process_site(WNPtemplate, WNPsppOverall,20:25,33)

BBNPGrp7 <- process_site(BBNPtemplate, BBNPsppOverall,2:7,24)
BBNPGrp5 <- process_site(BBNPtemplate, BBNPsppOverall,8:13,25)
BBNPGrp3 <- process_site(BBNPtemplate, BBNPsppOverall,14:19,26)

SitexTaxon <- read.csv("SitexTaxonTemplate.csv")

WNPGrp_list <- list(WNPGrp6, WNPGrp4, WNPGrp2, WNPGrp1)
BBNPGrp_list <- list(BBNPGrp7, BBNPGrp5, BBNPGrp3)

row_counter <- 1
for (grp in WNPGrp_list){
  for (i in 4:9){
    SitexTaxon[row_counter, 4:88] <- t(grp)[i, 1:85]
    row_counter <- row_counter + 1
  }
}
for (grp in BBNPGrp_list){
  for (i in 4:9){
    SitexTaxon[row_counter, 4:77] <- t(grp)[i,1:74]
    SitexTaxon[row_counter, 89:99] <- t(grp)[i,75:85]
    row_counter <- row_counter + 1
  }
}

SitexTaxon[SitexTaxon == "" | is.na(SitexTaxon)] <- 0
SitexTaxon <- SitexTaxon %>%
  relocate(Araneae, Araneae.1, .before = Total) %>%
  mutate_at(c(4:100), as.numeric)
SitexTaxon$Araneae <- rowSums(SitexTaxon[98:99])
SitexTaxon <- SitexTaxon[-c(99)]
SitexTaxon$Site <- factor(SitexTaxon$Site)
SitexTaxon$Group <- factor(SitexTaxon$Group)
SitexTaxon$Sample <- factor(SitexTaxon$Sample)
SitexTaxon$Total <- rowSums(SitexTaxon[4:98])

TaxonxSite <- SitexTaxon %>%
  t() %>%
  as.data.frame() %>%
  rownames_to_column(var = "Species_Name") %>%
  slice(-1:-3) %>%
  mutate(across(2:43, as.numeric)) %>%
  mutate(WNP = rowSums(across(2:25)),
         BBNP = rowSums(across(26:43))) %>% 
  select(-c(2:43)) %>% 
  mutate(WNP.prop = WNP / WNP[96],
         BBNP.prop = BBNP / BBNP[96])

WNP.prop <- TaxonxSite %>%
  slice(-n()) %>%                
  arrange(desc(WNP.prop)) %>%
  pull(WNP.prop)

BBNP.prop <- TaxonxSite %>%
  slice(-n()) %>%                
  arrange(desc(BBNP.prop)) %>%
  pull(BBNP.prop)

Rank <- 1:95

Rank.Abundance <- data.frame(Rank, WNP.prop, BBNP.prop) %>% 
  slice(1:25) %>% 
  pivot_longer(cols = -Rank, names_to = "Site",
               values_to = "Relative Abundance") %>%
  mutate(
    Rank = factor(Rank),
    Site = factor(str_remove(Site,".prop")))

WNP.Abundance <- TaxonxSite %>%
  arrange(desc(WNP)) %>% 
  slice(2:26) %>% 
  select(-c(3:5)) %>% 
  rename(Abundance = WNP) %>% 
  mutate(
    across(Species_Name, ~ replace(.x, c(7,23,24,25),
                                   c("Chalcorana cf. labialis",
                                     "Oligochaeta",
                                     "Diptera Pupae",
                                     "Clarias batrachus"))),
    Species_Name = as.factor(Species_Name),
    Higher_Taxa = as.factor(c("Diptera","Oligochaeta","Ephemeroptera",
                              "Hirudinea","Coleoptera","Diptera",
                              "Anura","Platyhelminthes","Crustecea",
                              "Odonata (Anisoptera)","Megaloptera",
                              "Coleoptera","Crustecea","Odonata (Anisoptera)",
                              "Ephemeroptera","Plecoptera","Hemiptera",
                              "Hemiptera","Lepidoptera","Coleoptera",
                              "Diptera","Diptera","Oligochaeta",
                              "Diptera","Clariidae")))

BBNP.Abundance <- TaxonxSite %>%
  arrange(desc(BBNP)) %>% 
  slice(2:25) %>% 
  select(-c(2,4:5)) %>% 
  rename(Abundance = BBNP) %>% 
  mutate(Species_Name = replace(Species_Name, 5, "Gambusia affinis"),
         Species_Name = as.factor(Species_Name),
         Higher_Taxa = as.factor(c("Diptera","Crustecea","Mollusca",
                              "Diptera","Poeciliidae","Mollusca",
                              "Mollusca","Nematoda","Oligochaeta",
                              "Odonata (Anisoptera)","Odonata (Anisoptera)",
                              "Diptera","Acari","Diptera",
                              "Mollusca","Odonata (Zygoptera)",
                              "Odonata (Anisoptera)","Hemiptera","Coleoptera",
                              "Diptera","Diptera","Coleoptera",
                              "Diptera","Arachnida")))

Tray.net <- full_join(WNPsppOverall, BBNPsppOverall, by = "Method") %>% 
  select(-c(2:29,34:55)) %>% 
  filter(!if_all(2:8, is.na)) %>% 
  slice(-30) %>% 
  mutate(across(everything(), ~ replace_na(.x, 0)))

Tray.net <- rbind(Tray.net, c("Total",colSums(Tray.net[2:nrow(Tray.net), 2:8])))


```

```{r Indices}

Site <- c(rep("WNP",24),rep("BBNP",18))

Group <- c(rep(c("6","4","2","1","7","5","3"),each = 6))

Sample <- c(rep(c("A","B","C","D","E","F"), times = 7))

Singscore <- c(SingScore(WNPGrp6)$SingScore, 
               SingScore(WNPGrp4)$SingScore, 
               SingScore(WNPGrp2)$SingScore, 
               SingScore(WNPGrp1)$SingScore,
               SingScore(BBNPGrp7)$SingScore, 
               SingScore(BBNPGrp5)$SingScore, 
               SingScore(BBNPGrp3)$SingScore)

ShannonH <- diversity(SitexTaxon[,4:98])

Richness <- specnumber(SitexTaxon[,4:98])

FW_Indices <- data.frame(Site = Site, Group = Group, Sample = Sample,
                         ShannonH = ShannonH,
                         SingScore = Singscore,
                         Richness = Richness) %>% 
  mutate(across(1:3, as.factor))

Site_Indices <- FW_Indices %>% 
  group_by(Site) %>% 
  summarise(ShannonH_Mean = mean(ShannonH),
            ShannonH_SE = (sd(ShannonH)/sqrt(length(ShannonH))),
            ShannonH_Med = median(ShannonH),
            ShannonH_IQR = IQR(ShannonH),
            SingScore_Mean = mean(SingScore),
            SingScore_SE = (sd(SingScore)/sqrt(length(SingScore))),
            SingScore_Med = median(SingScore),
            SingScore_IQR = IQR(Singscore),
            Richness_Mean = mean(Richness),
            Richness_SE = (sd(Richness)/sqrt(length(Richness))),
            Richness_Med = median(Richness),
            Richness_IQR = IQR(Richness))

MWU_Indices <- FW_Indices[FW_Indices$Richness > 0,]


MannWhitneyU_SS <- wilcox.test(SingScore ~ Site, data = MWU_Indices, 
                               alternative = "two.sided", conf.int = TRUE, 
                               conf.level = 0.95, paired = FALSE, exact = TRUE)
MannWhitneyU_ShannonH <- wilcox.test(ShannonH ~ Site, data = MWU_Indices, 
                               alternative = "two.sided", conf.int = TRUE, 
                               conf.level = 0.95, paired = FALSE, exact = TRUE)
MannWhitneyU_Richness <- wilcox.test(Richness ~ Site, data = MWU_Indices, 
                               alternative = "two.sided", conf.int = TRUE, 
                               conf.level = 0.95, paired = FALSE, exact = TRUE)

MannWhitneyU_SS
MannWhitneyU_ShannonH
MannWhitneyU_Richness

```

```{r Stream Parameters}

Stream_Overall <- read.csv("Stream Location and Chemical Parameters.csv") %>%
  select(-c(6:7, 11:12)) %>%
  t() %>%
  `rownames<-`(NULL) %>%
  `colnames<-`(.[1, ]) %>%
  .[-1, ] %>%
  as.data.frame() %>%   
  cbind(Site = c(rep("WNP",4),rep("BBNP",3))) %>%
  relocate(Site)

WNP_Para <- read.csv("WNP Stream Physical Environmental Parameters.csv") %>%
  select((-c(8,15,22,29:31))) %>% 
  t() %>%
  `rownames<-`(NULL) %>%
  `colnames<-`(.[1, ]) %>%
  .[-1, ] %>%
  as.data.frame() %>% 
  cbind(Site = rep("WNP", 24), Group = rep(c(6, 4, 2, 1), each = 6)) %>% 
  relocate(Site,Group)

BBNP_Para <- read.csv("BBNP Stream Physical Environmental Parameters.csv") %>%
  select((-c(8,15,22:24))) %>% 
  t() %>%
  `rownames<-`(NULL) %>%
  `colnames<-`(.[1, ]) %>%
  .[-1, ] %>%
  as.data.frame() %>% 
  cbind(Site = rep("BBNP", 18), Group = rep(c(7, 5, 3), each = 6)) %>% 
  relocate(Site,Group)
BBNP_Para[BBNP_Para == "Not taken"] <- NA

FW_Para <- rbind(WNP_Para,BBNP_Para) %>% 
  mutate(across(c(1:3), as.factor),
         across(c(`Canopy cover (%)`,`Leaf litter (% cover)`,
                  `Wetted width (m)`,`Wetted depth (m)`,
                  `Surface flow rate (m/s)`), as.numeric))

FW_Para$CSA <- FW_Para$`Wetted width (m)` * FW_Para$`Wetted depth (m)` * 0.5 * 10000

temp <- FW_Para %>% 
  group_by(Group) %>% 
  summarize(
    Cc_Mean = mean(`Canopy cover (%)`, na.rm = TRUE),
    Cc_SE = sd(`Canopy cover (%)`, na.rm = TRUE)/
      sqrt(sum(!is.na(`Canopy cover (%)`))),
    Ll_Mean = mean(`Leaf litter (% cover)`, na.rm = TRUE),
    Ll_SE = sd(`Leaf litter (% cover)`, na.rm = TRUE)/
      sqrt(sum(!is.na(`Leaf litter (% cover)`))),
    Ww_Mean = mean(`Wetted width (m)`, na.rm = TRUE),
    Ww_SE = sd(`Wetted width (m)`, na.rm = TRUE)/
      sqrt(sum(!is.na(`Wetted width (m)`))),
    Wd_Mean = mean(`Wetted depth (m)`, na.rm = TRUE),
    Wd_SE = sd(`Wetted depth (m)`, na.rm = TRUE)/
      sqrt(sum(!is.na(`Wetted depth (m)`))),
    Sfr_Mean = mean(`Surface flow rate (m/s)`, na.rm = TRUE),
    Sfr_SE = sd(`Surface flow rate (m/s)`, na.rm = TRUE)/
      sqrt(sum(!is.na(`Surface flow rate (m/s)`))),
    Csa_Mean = mean(CSA, na.rm = TRUE),
    Csa_SE = sd(CSA)/sqrt(sum(!is.na(CSA)))
  )

Group <- c("6","4","2","1","7","5","3")

x <- Group
temp <- temp %>% 
  slice(match(x, Group))

temp <- temp[,-1]

Stream_Overall <- Stream_Overall %>% 
  cbind(temp) %>% 
  mutate(
    across(1:2, as.factor),
    across(4:7, as.numeric)
  )

Site_Para1 <- Stream_Overall %>% 
  group_by(Site) %>%
  summarize(
    pH_mean = mean(pH),
    pH_SE = sd(pH)/sqrt(sum(!is.na(pH))),
    pH_med = median(pH),
    pH_IQR = IQR(pH),
    temp_mean = mean(`Temperature (°C)`),
    temp_SE = sd(`Temperature (°C)`)/sqrt(sum(!is.na(`Temperature (°C)`))),
    temp_med = median(`Temperature (°C)`),
    temp_IQR = IQR(`Temperature (°C)`),
    DO_mean = mean(`Dissolved oxygen (mg/l)`),
    DO_SE = sd(`Dissolved oxygen (mg/l)`)/sqrt(sum(!is.na(`Dissolved oxygen (mg/l)`))),
    DO_med = median(`Dissolved oxygen (mg/l)`),
    Do_IQR = IQR(`Dissolved oxygen (mg/l)`),
    con_mean = mean(`Conductivity (microSeimens)`),
    con_SE = sd(`Conductivity (microSeimens)`)/sqrt(sum(!is.na(`Conductivity (microSeimens)`))),
    con_med = median(`Conductivity (microSeimens)`),
    con_IQR = IQR(`Conductivity (microSeimens)`)
  )

Site_Para2 <- FW_Para %>% 
  group_by(Site) %>% 
  summarize(
    Cc_mean = mean(`Canopy cover (%)`),
    Cc_SE = sd(`Canopy cover (%)`, na.rm = TRUE)/sqrt(sum(!is.na(`Canopy cover (%)`))),
    Cc_med = median(`Canopy cover (%)`),
    Cc_IQR = IQR(`Canopy cover (%)`, na.rm = TRUE),
    Ll_mean = mean(`Leaf litter (% cover)`),
    Ll_SE = sd(`Leaf litter (% cover)`, na.rm = TRUE)/sqrt(sum(!is.na(`Leaf litter (% cover)`))),
    Ll_med = median(`Leaf litter (% cover)`),
    Ll_IQR = IQR(`Leaf litter (% cover)`, na.rm = TRUE),
    Ww_mean = mean(`Wetted width (m)`),
    Ww_SE = sd(`Wetted width (m)`, na.rm = TRUE)/sqrt(sum(!is.na(`Wetted width (m)`))),
    Ww_med = median(`Wetted width (m)`),
    Ww_IQR = IQR(`Wetted width (m)`, na.rm = TRUE),
    Wd_mean = mean(`Wetted depth (m)`),
    Wd_SE = sd(`Wetted depth (m)`, na.rm = TRUE)/sqrt(sum(!is.na(`Wetted depth (m)`))),
    Wd_med = median(`Wetted depth (m)`),
    Wd_IQR = IQR(`Wetted depth (m)`, na.rm = TRUE),
    Sfr_mean = mean(`Surface flow rate (m/s)`, na.rm = TRUE),
    Sfr_SE = sd(`Surface flow rate (m/s)`, na.rm = TRUE)/sqrt(sum(!is.na(`Surface flow rate (m/s)`))),
    Sfr_med = median(`Surface flow rate (m/s)`, na.rm = TRUE),
    Sft_IQR = IQR(`Surface flow rate (m/s)`, na.rm = TRUE),
    Csa_mean = mean(CSA),
    Csa_SE = sd(CSA, na.rm = TRUE)/sqrt(sum(!is.na(CSA))),
    Csa_med = median(CSA),
    Csa_IQR = IQR(CSA, na.rm = TRUE),
  )

Site_Para <- left_join(Site_Para1, Site_Para2, by = "Site")

```

```{r Rank Abundance}

Whittaker.plot <- ggplot(Rank.Abundance,
                         aes(x = Rank, y = `Relative Abundance`,
                             color = Site, group = Site)) +
  geom_line() +
  geom_point() +
  theme_bw(base_size = 12) +
  theme(axis.title = element_text(size = 14),
        axis.text = element_text(size = 12),
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        legend.title = element_blank(),
        legend.text = element_text(size = 11),
        legend.position = c(0.92,0.8),
        panel.border = element_blank(),
        axis.line = element_line(colour = "black"),
        axis.ticks = element_line(),
        plot.title = element_text(size = 16, hjust = 0.5)) +
  scale_colour_viridis_d(option = "D", begin = 0, end = 0.8) +
  scale_y_continuous(expand = c(0, 0), limits = c(0,0.9),
                     breaks = seq(0,0.9, by = 0.2))

Whittaker.plot

```

```{r Stream Chemical Parameters}
leg1.plot <- ggplot(Stream_Overall, aes(x = Site, y = pH)) +
  geom_point(aes(color = Group)) +
  theme_bw(base_size = 12) +
  theme(legend.text = element_text(size = 11),
        legend.position = "right",) +
  scale_colour_viridis_d(option = "D", begin = 0, end = 0.8)

legend1 <- get_legend(leg1.plot + theme(legend.box.margin = margin(0, 0, 0, 12)))

pH.plot <- ggplot(Stream_Overall,
                  aes(x = Site, y = pH)) +  
  geom_boxplot(aes(fill = Site), alpha = 0.5, width = 0.5) +
  geom_point(aes(color = Group)) +
  labs(tag = "(a)",
       y = "pH",
       x = "Site") +
  theme_bw(base_size = 12) +
  theme(plot.tag = element_text(size = 12),
        axis.title = element_text(size = 10),
        axis.text = element_text(size = 10),
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        legend.title = element_blank(),
        legend.text = element_text(size = 11),
        legend.position = "none",
        panel.border = element_blank(),
        axis.line = element_line(colour = "black"),
        axis.ticks = element_line(),
        plot.title = element_text(size = 16, hjust = 0.5)) +
  scale_y_continuous(limits = c(6,6.8), breaks = seq(6,6.8, by = 0.2)) +
  scale_fill_viridis_d(option = "D", begin = 0, end = 0.5) +
  scale_colour_viridis_d(option = "D", begin = 0, end = 0.8)

#pH.plot

#names(Stream_Overall)

temp.plot <- ggplot(Stream_Overall,
                    aes(x = Site, y = `Temperature (°C)`)) +  
  geom_boxplot(aes(fill = Site), alpha = 0.5, width = 0.5) +
  geom_point(aes(color = Group)) +
  labs(tag = "(b)",
       y = "Temperature (°C)",
       x = "Site") +
  theme_bw(base_size = 12) +
  theme(plot.tag = element_text(size = 12),
        axis.title = element_text(size = 10),
        axis.text = element_text(size = 10),
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        legend.title = element_blank(),
        legend.text = element_text(size = 11),
        legend.position = "none",
        panel.border = element_blank(),
        axis.line = element_line(colour = "black"),
        axis.ticks = element_line(),
        plot.title = element_text(size = 16, hjust = 0.5)) +
  scale_y_continuous(limits = c(26.5,28.5), breaks = seq(26.5,28.5, by = 0.3)) +
  scale_fill_viridis_d(option = "D", begin = 0, end = 0.5) +
  scale_colour_viridis_d(option = "D", begin = 0, end = 0.8)

#temp.plot

DO.plot <- ggplot(Stream_Overall,
                  aes(x = Site, y = `Dissolved oxygen (mg/l)`)) +  
  geom_boxplot(aes(fill = Site), alpha = 0.5, width = 0.5) +
  geom_point(aes(color = Group)) +
  labs(tag = "(c)",
       y = "Dissolved oxygen (mg/l)",
       x = "Site") +
  theme_bw(base_size = 12) +
  theme(plot.tag = element_text(size = 12),
        axis.title = element_text(size = 10),
        axis.text = element_text(size = 10),
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        legend.title = element_blank(),
        legend.text = element_text(size = 11),
        legend.position = "none",
        panel.border = element_blank(),
        axis.line = element_line(colour = "black"),
        axis.ticks = element_line(),
        plot.title = element_text(size = 16, hjust = 0.5)) +
  scale_y_continuous(limits = c(2.4,5.6), breaks = seq(2,6, by = 0.5)) +
  scale_fill_viridis_d(option = "D", begin = 0, end = 0.5) +
  scale_colour_viridis_d(option = "D", begin = 0, end = 0.8)

#DO.plot

Con.plot <- ggplot(Stream_Overall,
                   aes(x = Site, y = `Conductivity (microSeimens)`)) +  
  geom_boxplot(aes(fill = Site), alpha = 0.5, width = 0.5) +
  geom_point(aes(color = Group)) +
  labs(tag = "(d)",
       y = "Conductivity (microSeimens)",
       x = "Site") +
  theme_bw(base_size = 12) +
  theme(plot.tag = element_text(size = 12),
        axis.title.x = element_text(size = 10),
        axis.title.y = element_text(size = 9),
        axis.text = element_text(size = 10),
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        legend.title = element_blank(),
        legend.text = element_text(size = 11),
        legend.position = "none",
        panel.border = element_blank(),
        axis.line = element_line(colour = "black"),
        axis.ticks = element_line(),
        plot.title = element_text(size = 16, hjust = 0.5)) +
  scale_y_continuous(limits = c(20,200), breaks = seq(20,200, by = 30)) +
  scale_fill_viridis_d(option = "D", begin = 0, end = 0.5) +
  scale_colour_viridis_d(option = "D", begin = 0, end = 0.8)

#Con.plot

p1 <- plot_grid(pH.plot, temp.plot, DO.plot, Con.plot,
                nrow = 2 , ncol = 2, align = "v", 
                rel_widths = c(1,1), rel_heights = c(1,1))
#p1

p2 <- plot_grid(p1, legend1, ncol = 2, rel_widths = c(1,0.15))

p2
```

```{r Stream Indices}
shan.plot <- ggplot(FW_Indices, aes(x = Site, y = ShannonH)) +  
  geom_boxplot(aes(fill = Site), alpha = 0.5, width = 0.5, outlier.shape = NA) +
  geom_point(aes(color = Group), 
             position = position_jitter(width = .05, height = 0, seed = 3254),
             size = 2, alpha = 1) +
  labs(tag = "(a)",
       y = "Shannon's Index (H')",
       x = "Site") +
  theme_bw(base_size = 12) +
  theme(plot.tag = element_text(size = 12),
        axis.title = element_text(size = 10),
        axis.text = element_text(size = 10),
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        legend.title = element_blank(),
        legend.text = element_text(size = 11),
        legend.position = "none",
        panel.border = element_blank(),
        axis.line = element_line(colour = "black"),
        axis.ticks = element_line(),
        plot.title = element_text(size = 16, hjust = 0.5)) +
  scale_y_continuous(limits = c(0,1.8), breaks = seq(0,1.8, by = 0.2)) +
  scale_fill_viridis_d(option = "D", begin = 0, end = 0.5) +
  scale_colour_viridis_d(option = "D", begin = 0, end = 0.8)

#shan.plot

sing.plot <- ggplot(FW_Indices, aes(x = Site, y = SingScore)) +  
  geom_boxplot(aes(fill = Site), alpha = 0.5, width = 0.5, outlier.shape = NA) +
  geom_point(aes(color = Group), 
             position = position_jitter(width = .05, height = 0, seed = 3254),
             size = 2, alpha = 1) +
  labs(tag = "(b)",
       y = "SingScore",
       x = "Site") +
  theme_bw(base_size = 12) +
  theme(plot.tag = element_text(size = 12),
        axis.title = element_text(size = 10),
        axis.text = element_text(size = 10),
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        legend.title = element_blank(),
        legend.text = element_text(size = 11),
        legend.position = "none",
        panel.border = element_blank(),
        axis.line = element_line(colour = "black"),
        axis.ticks = element_line(),
        plot.title = element_text(size = 16, hjust = 0.5)) +
  scale_y_continuous(limits = c(0,180), breaks = seq(0,180, by = 20)) +
  scale_fill_viridis_d(option = "D", begin = 0, end = 0.5) +
  scale_colour_viridis_d(option = "D", begin = 0, end = 0.8)

#sing.plot

rich.plot <- ggplot(FW_Indices, aes(x = Site, y = Richness)) +  
  geom_boxplot(aes(fill = Site), alpha = 0.5, width = 0.5, outlier.shape = NA) +
  geom_point(aes(color = Group), 
             position = position_jitter(width = .05, height = 0, seed = 3254),
             size = 2, alpha = 1) +
  labs(tag = "(c)",
       y = "Richness",
       x = "Site") +
  theme_bw(base_size = 12) +
  theme(plot.tag = element_text(size = 12),
        axis.title = element_text(size = 10),
        axis.text = element_text(size = 10),
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        legend.title = element_blank(),
        legend.text = element_text(size = 11),
        legend.position = "none",
        panel.border = element_blank(),
        axis.line = element_line(colour = "black"),
        axis.ticks = element_line(),
        plot.title = element_text(size = 16, hjust = 0.5)) +
  scale_y_continuous(limits = c(0,12), breaks = seq(0,12, by = 2)) +
  scale_fill_viridis_d(option = "D", begin = 0, end = 0.5) +
  scale_colour_viridis_d(option = "D", begin = 0, end = 0.8)

#rich.plot

p3 <- plot_grid(shan.plot, sing.plot, rich.plot,
                ncol = 3, align = "v")
#p3

p4 <- plot_grid(p3, legend1, ncol = 2, rel_widths = c(1,0.15))

p4
```

```{r Stream Morphometrics by Group, fig.width = 10, fig.height = 12}

grp_order <- Group

leg2.plot <- ggplot(FW_Para, aes(x = factor(Group, level = grp_order),
                               y = `Canopy cover (%)`)) +  
  geom_boxplot(aes(fill = Group), alpha = 0.5,) +
  geom_point(aes(color = Section)) +
  theme_bw(base_size = 12) +
  theme(legend.text = element_text(size = 11),
        legend.box = "horizontal",
        legend.position = "right",) +
  scale_fill_viridis_d(option = "D", begin = 0, end = 0.5) +
  scale_colour_viridis_d(option = "D", begin = 0, end = 0.8)

legend2 <- get_legend(leg2.plot + theme(legend.box.margin = margin(0,0,0,12)))

cc.plot <- ggplot(FW_Para, aes(x = factor(Group, level = grp_order),
                               y = `Canopy cover (%)`)) +  
  geom_boxplot(aes(fill = Group), alpha = 0.5,
               width = 0.5, outlier.shape = NA,) +
  geom_point(aes(color = Section), 
             position = position_jitter(width = .05, height = 0, seed = 3254),
             size = 2, alpha = 1) +
  labs(tag = "(a)",
       y = "Canopy Cover (%)",
       x = "Group") +
  theme_bw(base_size = 12) +
  theme(plot.tag = element_text(size = 12),
        axis.title = element_text(size = 10),
        axis.text = element_text(size = 10),
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        legend.title = element_blank(),
        legend.text = element_text(size = 11),
        legend.position = "none",
        panel.border = element_blank(),
        axis.line = element_line(colour = "black"),
        axis.ticks = element_line(),
        plot.title = element_text(size = 16, hjust = 0.5)) +
  scale_y_continuous(limits = c(0,100), breaks = seq(0,100, by = 10)) +
  scale_fill_viridis_d(option = "D", begin = 0, end = 0.5) +
  scale_colour_viridis_d(option = "D",begin = 0, end = 0.8)

#cc.plot

ll.plot <- ggplot(FW_Para, aes(x = factor(Group, level = grp_order),
                               y = `Leaf litter (% cover)`)) +  
  geom_boxplot(aes(fill = Group), alpha = 0.5,
               width = 0.5, outlier.shape = NA,) +
  geom_point(aes(color = Section), 
             position = position_jitter(width = .15, height = 0, seed = 325403254),
             size = 2, alpha = 1) +
  labs(tag = "(b)",
       y = "Leaf Litter (% cover)",
       x = "Group") +
  theme_bw(base_size = 12) +
  theme(plot.tag = element_text(size = 12),
        axis.title = element_text(size = 10),
        axis.text = element_text(size = 10),
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        legend.title = element_blank(),
        legend.text = element_text(size = 11),
        legend.position = "none",
        panel.border = element_blank(),
        axis.line = element_line(colour = "black"),
        axis.ticks = element_line(),
        plot.title = element_text(size = 16, hjust = 0.5)) +
  scale_y_continuous(limits = c(0,60), breaks = seq(0,60, by = 10)) +
  scale_fill_viridis_d(option = "D", begin = 0, end = 0.5) +
  scale_colour_viridis_d(option = "D", begin = 0, end = 0.8)

#ll.plot

ww.plot <- ggplot(FW_Para, aes(x = factor(Group, level = grp_order),
                               y = `Wetted width (m)`)) +  
  geom_boxplot(aes(fill = Group), alpha = 0.5,
               width = 0.5, outlier.shape = NA,) +
  geom_point(aes(color = Section), 
             position = position_jitter(width = .15, height = 0, seed = 325403254),
             size = 2, alpha = 1) +
  labs(tag = "(c)",
       y = "Wetted Width (m)",
       x = "Group") +
  theme_bw(base_size = 12) +
  theme(plot.tag = element_text(size = 12),
        axis.title = element_text(size = 10),
        axis.text = element_text(size = 10),
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        legend.title = element_blank(),
        legend.text = element_text(size = 11),
        legend.position = "none",
        panel.border = element_blank(),
        axis.line = element_line(colour = "black"),
        axis.ticks = element_line(),
        plot.title = element_text(size = 16, hjust = 0.5)) +
  scale_y_continuous(limits = c(0.5,3), breaks = seq(0.5,3, by = 0.5)) +
  scale_fill_viridis_d(option = "D", begin = 0, end = 0.5) +
  scale_colour_viridis_d(option = "D", begin = 0, end = 0.8)

#ww.plot

wd.plot <- ggplot(FW_Para, aes(x = factor(Group, level = grp_order),
                               y = `Wetted depth (m)`)) +  
  geom_boxplot(aes(fill = Group), alpha = 0.5,
               width = 0.5, outlier.shape = NA,) +
  geom_point(aes(color = Section), 
             position = position_jitter(width = .15, height = 0, seed = 325403254),
             size = 2, alpha = 1) +
  labs(tag = "(d)",
       y = "Wetted Depth (m)",
       x = "Group") +
  theme_bw(base_size = 12) +
  theme(plot.tag = element_text(size = 12),
        axis.title = element_text(size = 10),
        axis.text = element_text(size = 10),
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        legend.title = element_blank(),
        legend.text = element_text(size = 11),
        legend.position = "none",
        panel.border = element_blank(),
        axis.line = element_line(colour = "black"),
        axis.ticks = element_line(),
        plot.title = element_text(size = 16, hjust = 0.5)) +
  scale_y_continuous(limits = c(0,0.3), breaks = seq(0,0.3, by = 0.05)) +
  scale_fill_viridis_d(option = "D", begin = 0, end = 0.5) +
  scale_colour_viridis_d(option = "D", begin = 0, end = 0.8)

#wd.plot

sfr.plot <- ggplot(FW_Para, aes(x = factor(Group, level = grp_order),
                               y = `Surface flow rate (m/s)`)) +  
  geom_boxplot(aes(fill = Group), alpha = 0.5,
               width = 0.5, outlier.shape = NA,) +
  geom_point(aes(color = Section),
             position = position_jitter(width = .15, height = 0, seed = 325403254),
             size = 2, alpha = 1) +
  labs(tag = "(e)",
       y = "Surface Flow Rate (m/s)",
       x = "Group") +
  theme_bw(base_size = 12) +
  theme(plot.tag = element_text(size = 12),
        axis.title = element_text(size = 10),
        axis.text = element_text(size = 10),
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        legend.title = element_blank(),
        legend.text = element_text(size = 11),
        legend.position = "none",
        panel.border = element_blank(),
        axis.line = element_line(colour = "black"),
        axis.ticks = element_line(),
        plot.title = element_text(size = 16, hjust = 0.5)) +
  scale_y_continuous(limits = c(0,0.6), breaks = seq(0,0.6, by = 0.1)) +
  scale_fill_viridis_d(option = "D", begin = 0, end = 0.5) +
  scale_colour_viridis_d(option = "D", begin = 0, end = 0.8)

#sfr.plot

csa.plot <- ggplot(FW_Para, aes(x = factor(Group, level = grp_order),
                               y = CSA)) +  
  geom_boxplot(aes(fill = Group), alpha = 0.5,
               width = 0.5, outlier.shape = NA,) +
  geom_point(aes(color = Section),
             position = position_jitter(width = .15, height = 0, seed = 325403254),
             size = 2, alpha = 1) +
  labs(tag = "(f)",
       y = bquote("Cross-Sectional Area " ~(cm^2)),
       x = "Group") +
  theme_bw(base_size = 12) +
  theme(plot.tag = element_text(size = 12),
        axis.title = element_text(size = 10),
        axis.text = element_text(size = 10),
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        legend.title = element_blank(),
        legend.text = element_text(size = 11),
        legend.position = "none",
        panel.border = element_blank(),
        axis.line = element_line(colour = "black"),
        axis.ticks = element_line(),
        plot.title = element_text(size = 16, hjust = 0.5)) +
  scale_y_continuous(limits = c(0,3000), breaks = seq(0,3000, by = 500)) +
  scale_fill_viridis_d(option = "D", begin = 0, end = 0.5) +
  scale_colour_viridis_d(option = "D", begin = 0, end = 0.8)

p5.1 <- plot_grid(cc.plot, ll.plot, ww.plot, wd.plot, sfr.plot, csa.plot,
                nrow = 3, ncol = 2, align = "v")

p5 <- plot_grid(p5.1,legend2, ncol = 2, rel_widths = c(1,0.2), align = "v")

p5
```

```{r Stream Morphometrics by Site, fig.width = 10, fig.height = 12}
cc1.plot <- ggplot(FW_Para, aes(x = Site,
                               y = `Canopy cover (%)`)) +  
  geom_boxplot(aes(fill = Site), alpha = 0.5,
               width = 0.5, outlier.shape = NA,) +
  geom_point(aes(color = Group), 
             position = position_jitter(width = .05, height = 0, seed = 3254),
             size = 2, alpha = 1) +
  labs(tag = "(a)",
       y = "Canopy Cover (%)",
       x = "Site") +
  theme_bw(base_size = 12) +
  theme(plot.tag = element_text(size = 12),
        axis.title = element_text(size = 10),
        axis.text = element_text(size = 10),
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        legend.title = element_blank(),
        legend.text = element_text(size = 11),
        legend.position = "none",
        panel.border = element_blank(),
        axis.line = element_line(colour = "black"),
        axis.ticks = element_line(),
        plot.title = element_text(size = 16, hjust = 0.5)) +
  scale_y_continuous(limits = c(0,100), breaks = seq(0,100, by = 10)) +
  scale_fill_viridis_d(option = "D", begin = 0, end = 0.5) +
  scale_colour_viridis_d(option = "D",begin = 0, end = 0.8)

#cc1.plot

ll1.plot <- ggplot(FW_Para, aes(x = Site,
                               y = `Leaf litter (% cover)`)) +  
  geom_boxplot(aes(fill = Site), alpha = 0.5,
               width = 0.5, outlier.shape = NA,) +
  geom_point(aes(color = Group), 
             position = position_jitter(width = .15, height = 0, seed = 325403254),
             size = 2, alpha = 1) +
  labs(tag = "(b)",
       y = "Leaf Litter (% cover)",
       x = "Site") +
  theme_bw(base_size = 12) +
  theme(plot.tag = element_text(size = 12),
        axis.title = element_text(size = 10),
        axis.text = element_text(size = 10),
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        legend.title = element_blank(),
        legend.text = element_text(size = 11),
        legend.position = "none",
        panel.border = element_blank(),
        axis.line = element_line(colour = "black"),
        axis.ticks = element_line(),
        plot.title = element_text(size = 16, hjust = 0.5)) +
  scale_y_continuous(limits = c(0,60), breaks = seq(0,60, by = 10)) +
  scale_fill_viridis_d(option = "D", begin = 0, end = 0.5) +
  scale_colour_viridis_d(option = "D", begin = 0, end = 0.8)

#ll1.plot

ww1.plot <- ggplot(FW_Para, aes(x = Site,
                               y = `Wetted width (m)`)) +  
  geom_boxplot(aes(fill = Site), alpha = 0.5,
               width = 0.5, outlier.shape = NA,) +
  geom_point(aes(color = Group), 
             position = position_jitter(width = .15, height = 0, seed = 325403254),
             size = 2, alpha = 1) +
  labs(tag = "(c)",
       y = "Wetted Width (m)",
       x = "Group") +
  theme_bw(base_size = 12) +
  theme(plot.tag = element_text(size = 12),
        axis.title = element_text(size = 10),
        axis.text = element_text(size = 10),
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        legend.title = element_blank(),
        legend.text = element_text(size = 11),
        legend.position = "none",
        panel.border = element_blank(),
        axis.line = element_line(colour = "black"),
        axis.ticks = element_line(),
        plot.title = element_text(size = 16, hjust = 0.5)) +
  scale_y_continuous(limits = c(0.5,3), breaks = seq(0.5,3, by = 0.5)) +
  scale_fill_viridis_d(option = "D", begin = 0, end = 0.5) +
  scale_colour_viridis_d(option = "D", begin = 0, end = 0.8)

#ww1.plot

wd1.plot <- ggplot(FW_Para, aes(x = Site,
                               y = `Wetted depth (m)`)) +  
  geom_boxplot(aes(fill = Site), alpha = 0.5,
               width = 0.5, outlier.shape = NA,) +
  geom_point(aes(color = Group), 
             position = position_jitter(width = .15, height = 0, seed = 325403254),
             size = 2, alpha = 1) +
  labs(tag = "(d)",
       y = "Wetted Depth (m)",
       x = "Site") +
  theme_bw(base_size = 12) +
  theme(plot.tag = element_text(size = 12),
        axis.title = element_text(size = 10),
        axis.text = element_text(size = 10),
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        legend.title = element_blank(),
        legend.text = element_text(size = 11),
        legend.position = "none",
        panel.border = element_blank(),
        axis.line = element_line(colour = "black"),
        axis.ticks = element_line(),
        plot.title = element_text(size = 16, hjust = 0.5)) +
  scale_y_continuous(limits = c(0,0.3), breaks = seq(0,0.3, by = 0.05)) +
  scale_fill_viridis_d(option = "D", begin = 0, end = 0.5) +
  scale_colour_viridis_d(option = "D", begin = 0, end = 0.8)

#wd.plot

sfr1.plot <- ggplot(FW_Para, aes(x = Site,
                               y = `Surface flow rate (m/s)`)) +  
  geom_boxplot(aes(fill = Site), alpha = 0.5,
               width = 0.5, outlier.shape = NA,) +
  geom_point(aes(color = Group),
             position = position_jitter(width = .15, height = 0, seed = 325403254),
             size = 2, alpha = 1) +
  labs(tag = "(e)",
       y = "Surface Flow Rate (m/s)",
       x = "Site") +
  theme_bw(base_size = 12) +
  theme(plot.tag = element_text(size = 12),
        axis.title = element_text(size = 10),
        axis.text = element_text(size = 10),
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        legend.title = element_blank(),
        legend.text = element_text(size = 11),
        legend.position = "none",
        panel.border = element_blank(),
        axis.line = element_line(colour = "black"),
        axis.ticks = element_line(),
        plot.title = element_text(size = 16, hjust = 0.5)) +
  scale_y_continuous(limits = c(0,0.6), breaks = seq(0,0.6, by = 0.1)) +
  scale_fill_viridis_d(option = "D", begin = 0, end = 0.5) +
  scale_colour_viridis_d(option = "D", begin = 0, end = 0.8)

#sfr.plot

csa1.plot <- ggplot(FW_Para, aes(x = Site,
                               y = CSA)) +  
  geom_boxplot(aes(fill = Site), alpha = 0.5,
               width = 0.5, outlier.shape = NA,) +
  geom_point(aes(color = Group),
             position = position_jitter(width = .15, height = 0, seed = 325403254),
             size = 2, alpha = 1) +
  labs(tag = "(f)",
       y = bquote("Cross-Sectional Area " ~(cm^2)),
       x = "Site") +
  theme_bw(base_size = 12) +
  theme(plot.tag = element_text(size = 12),
        axis.title = element_text(size = 10),
        axis.text = element_text(size = 10),
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        legend.title = element_blank(),
        legend.text = element_text(size = 11),
        legend.position = "none",
        panel.border = element_blank(),
        axis.line = element_line(colour = "black"),
        axis.ticks = element_line(),
        plot.title = element_text(size = 16, hjust = 0.5)) +
  scale_y_continuous(limits = c(0,3000), breaks = seq(0,3000, by = 500)) +
  scale_fill_viridis_d(option = "D", begin = 0, end = 0.5) +
  scale_colour_viridis_d(option = "D", begin = 0, end = 0.8)

p6.1 <- plot_grid(cc1.plot, ll1.plot, ww1.plot, wd1.plot, sfr1.plot, csa1.plot,
                nrow = 3, ncol = 2, align = "v")

p6 <- plot_grid(p6.1,legend1, ncol = 2, rel_widths = c(1, 0.15), align = "v")

p6
```

```{r Taxa Abundance, fig.width = 8, fig.height = 12}

WNP.Abun.plot <- ggplot(WNP.Abundance,
                        aes(x=factor(Species_Name, level = WNP.Abundance[,1]),
                            y = Abundance)) +
  geom_bar(stat = "identity", aes(fill = Higher_Taxa)) +
  labs(tag = "(a)",
       y = "Number of Individuals",
       x = "Taxa") +
  theme_bw(base_size = 12) +
  theme(axis.title = element_text(size = 14),
        axis.text.y = element_text(size = 10),
        axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.3, size = 8),
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        legend.title = element_blank(),
        legend.text = element_text(size = 11),
        legend.position = c(0.85,0.65),
        legend.key.size = unit(0.3, "cm"),
        panel.border = element_blank(),
        axis.line = element_line(colour = "black"),
        axis.ticks = element_line(),
        plot.title = element_text(size = 16, hjust = 0.5)) +
  scale_y_continuous(expand = c(0, 0)) +
  scale_fill_viridis_d(option = "D", begin = 0, end = 1)

#WNP.Abun.plot

BBNP.Abun.plot <- ggplot(BBNP.Abundance,
                         aes(x=factor(Species_Name, level = BBNP.Abundance[,1]),
                            y = Abundance)) +
  geom_bar(stat = "identity", aes(fill = Higher_Taxa)) +
  labs(tag = "(b)",
       y = "Number of Individuals",
       x = "Taxa") +
  theme_bw(base_size = 12) +
  theme(axis.title = element_text(size = 14),
        axis.text.y = element_text(size = 10),
        axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.3, size = 8),
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        legend.title = element_blank(),
        legend.text = element_text(size = 11),
        legend.position = c(0.85,0.65),
        legend.key.size = unit(0.3, "cm"),
        panel.border = element_blank(),
        axis.line = element_line(colour = "black"),
        axis.ticks = element_line(),
        plot.title = element_text(size = 16, hjust = 0.5)) +
  scale_y_continuous(expand = c(0, 0)) +
  scale_fill_viridis_d(option = "D", begin = 0, end = 1)

#BBNP.Abun.plot

p7 <- plot_grid(WNP.Abun.plot, BBNP.Abun.plot, nrow = 2, align = "v")

p7
```
